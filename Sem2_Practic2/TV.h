#pragma once

/*


8) Написать функцию, выводящую сведения об экземпляре структуры (значения полей).

9) Написать функцию, изменяющую значение одного поля структуры. При этом проверяется корректность значений полей структуры (вызов функции из п. 5).
Функция также должна возвращать признак успешного или неуспешного завершения инициализации.

10) Написать функцию, создающую экземпляр структуры в динамической памяти и возвращающую указатель на него.
При этом выполняется инициализация полей структуры некоторыми значениями, «по умолчанию» (вызов функции из п. 6).
Если невозможно выделить память, функция возвращает NULL.

11) Написать функцию, удаляющую экземпляр структуры из динамической памяти. Параметр функции – указатель на освобождаемую область памяти.

12) Написать тестирующую функцию (main), которая работает следующим образом:
- Создает 2 экземпляра структуры (автоматических, «на стеке»).
- Инициализирует их (вызов функции из п. 6).
- Печатает сведения об экземплярах структуры (п. 8).
- Инициализирует второй экземпляр как копию первого (п. 7).
- Изменяет значение поля в первом экземпляре (п. 9).
- Печатает сведения об экземплярах структуры (п. 8).
- Создает 2 экземпляра структуры в динамической памяти (п. 10).
- Выполняет с ними те же действия.
- Удаляет динамически созданные объекты (п. 12).
Важно: тестовые данные для функций не обязательно вводит пользователь. Их можно сразу задать в тексте программы.
*/

struct TV {
	char* _model;
	int _displaySize;
	bool _connectToWiFi;
};

int CheckValues(TV* tv);
int Init(TV* res, char* model, int displaySize, bool connectToWifi);
void Init(TV* res, TV* original);
void Print(TV* tv);